paths:
  'index_by_location':
    get:
      operationId: getEventOccurrencesByClient
      summary: List event occurrences for client
      description: List event occurrences for client
      tags:
        - Events
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: require_client_present
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '../schemas/event_occurrence_list.yml#/components/schemas/EventOccurrenceList'
            application/xml:
              schema:
                $ref: '../schemas/event_occurrence_list.yml#/components/schemas/EventOccurrenceList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                title: GetClientEntriesBadRequest
                type: object
                properties:
                  errorResponseEntries:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
        '404':
          description: notFound
          content:
            application/json:
              schema:
                title: notFound

components:
  schemas:
    OccurrenceList:
      example:
        occurrences:
          - date: '2016-02-01'
            employeeIds:
              - 1
              - 2
            endTime: '2016-02-01T00:02:00.000+01:00'
            groupId: 1
            groupName: Name of group
            id: 1@2016-02-01
            locationId: 10
            locationName: Name of location
            recurrenceInterval: 1
            recurrenceType: single
            registration: present
            startTime: '2016-02-01T00:01:00.000+01:00'
      properties:
        occurrences:
          items:
            $ref: '#/components/schemas/Occurrence'
          type: array
      type: object
    Occurrence:
      example:
        date: '2016-02-01'
        employeeIds:
          - 1
          - 2
        endTime: '2016-02-01T00:02:00.000+01:00'
        groupId: 1
        groupName: Name of group
        id: 1@2016-02-01
        locationId: 10
        locationName: Name of location
        recurrenceInterval: 1
        recurrenceType: single
        registration: present
        startTime: '2016-02-01T00:01:00.000+01:00'
      properties:
        date:
          format: date
          type: string
        employeeIds:
          items:
            type: integer
          type: array
        endTime:
          format: date-time
          type: string
        groupId:
          format: int64
          type: integer
        groupName:
          type: string
        id:
          type: string
        locationId:
          format: int64
          type: integer
        locationName:
          type: string
        recurrenceInterval:
          format: int32
          type: integer
          nullable: true
        recurrenceType:
          type: string
          nullable: true
        registration:
          type: string
        startTime:
          format: date-time
          type: string
          nullable: true
      type: object
